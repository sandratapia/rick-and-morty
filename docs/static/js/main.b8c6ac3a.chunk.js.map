{"version":3,"sources":["images/not-found.png","images/portal.png","images/logo_header.png","components/Header.js","data/fetchFromApi.js","components/InputFilter.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterInfo.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","React","Component","fetchFromApi","fetch","then","response","json","data","results","map","character","id","name","species","gender","origin","location","image","episode","status","InputFilter","props","handleInput","bind","handleSpecies","handleSubmit","ev","currentTarget","value","this","filterCharacter","specie","filterSpecies","preventDefault","onSubmit","htmlFor","type","onChange","inputValue","checked","specieSelected","CharacterCard","route","Fragment","to","key","toLowerCase","CharacterList","characters","length","NotFound","objectToJSX","CharacterInfo","actualIndex","charactersToShow","indexOf","prevId","nextId","class","Portal","App","state","isFetching","renderCharacterInfo","orderedObject","sort","a","b","undefined","setState","characterToShow","prevState","filter","includes","routeId","parseInt","match","params","size","selectedCharacter","find","allFilters","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b8c6ac3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.fc8ab070.png\";","module.exports = __webpack_public_path__ + \"static/media/portal.5b537363.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_header.75509f2e.png\";","import React from \"react\";\r\nimport \"../stylesheet/header/_header.scss\";\r\nimport logo from \"../images/logo_header.png\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header__logo\">\r\n          <img className=\"img\" src={logo} alt=\"logo\" />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","const fetchFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          species: character.species,\r\n          gender: character.gender,\r\n          origin: character.origin.name,\r\n          location: character.location.name,\r\n          image: character.image,\r\n          episode: character.episode,\r\n          status: character.status,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default fetchFromApi;\r\n","import React from \"react\";\r\nimport \"../stylesheet/form/_inputs.scss\";\r\n\r\nclass InputFilter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleSpecies = this.handleSpecies.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInput(ev) {\r\n    const character = ev.currentTarget.value;\r\n    this.props.filterCharacter(character);\r\n  }\r\n  handleSpecies(ev) {\r\n    const specie = ev.currentTarget.value;\r\n    this.props.filterSpecies(specie);\r\n  }\r\n  handleSubmit(ev) {\r\n    ev.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form\">\r\n        <fieldset className=\"search__character\">\r\n          <label htmlFor=\"search\">Search your favorite character</label>\r\n          <input\r\n            id=\"search\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={this.props.inputValue}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className=\"filter__character\">\r\n          <p>Species filter</p>\r\n          <label htmlFor=\"human\" name=\"species\">\r\n            Human\r\n          </label>\r\n          <input\r\n            id=\"human\"\r\n            type=\"radio\"\r\n            value=\"human\"\r\n            name=\"species\"\r\n            onChange={this.handleSpecies}\r\n            checked={this.props.specieSelected === \"human\"}\r\n          />\r\n          <label htmlFor=\"alien\" name=\"species\">\r\n            Alien\r\n          </label>\r\n          <input\r\n            id=\"alien\"\r\n            type=\"radio\"\r\n            value=\"alien\"\r\n            name=\"species\"\r\n            onChange={this.handleSpecies}\r\n            checked={this.props.specieSelected === \"alien\"}\r\n          />\r\n          <label htmlFor=\"all\" name=\"species\">\r\n            All characters\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"all\"\r\n            name=\"species\"\r\n            onChange={this.handleSpecies}\r\n            checked={this.props.specieSelected === \"all\"}\r\n          />\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFilter;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheet/card/_cardCharacter.scss\";\r\n\r\nclass CharacterCard extends React.Component {\r\n  render() {\r\n    const route = `/character/${this.props.id}`;\r\n    return (\r\n      <React.Fragment>\r\n        <Link className=\"link__arrow\" to={route}>\r\n          <li\r\n            className=\"character__card\"\r\n            id={this.props.id}\r\n            key={this.props.id}\r\n          >\r\n            <div className=\"info__character\">\r\n              <div className=\"container__img\">\r\n                <img src={this.props.image} alt=\"character image\" />\r\n              </div>\r\n              <div className=\"container__info\">\r\n                <h2>{this.props.name}</h2>\r\n                <p>\r\n                  {this.props.species}\r\n                  <i\r\n                    className={\r\n                      this.props.species.toLowerCase() === \"human\"\r\n                        ? `fas fa-user-alt`\r\n                        : `fab fa-reddit-alien`\r\n                    }\r\n                  ></i>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport \"../stylesheet/list/_characterList.scss\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport NotFound from \"../images/not-found.png\";\r\n\r\nclass CharacterList extends React.Component {\r\n  render() {\r\n    if (this.props.characters.length === 0) {\r\n      return (\r\n        <div className=\"not__exist\">\r\n          <h2>The character you are looking for, doesn't exist.</h2>\r\n          <div className=\"not-found\">\r\n            <img src={NotFound} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const myCharacters = this.props.characters;\r\n      const objectToJSX = myCharacters.map((character) => {\r\n        return (\r\n          <CharacterCard\r\n            id={character.id}\r\n            name={character.name}\r\n            species={character.species}\r\n            gender={character.gender}\r\n            origin={character.origin}\r\n            location={character.location}\r\n            image={character.image}\r\n            episode={character.episode}\r\n            key={character.id}\r\n          />\r\n        );\r\n      });\r\n      return (\r\n        <>\r\n          <ul className=\"character__list\">{objectToJSX}</ul>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheet/card/_detailCharacter.scss\";\r\nimport Portal from \"../images/portal.png\";\r\n\r\nconst CharacterInfo = (props) => {\r\n  const { image, name, status, species, origin, episode, id } = props.character;\r\n  const actualIndex = props.charactersToShow.indexOf(props.character);\r\n\r\n  const prevId =\r\n    actualIndex > 0\r\n      ? props.charactersToShow[actualIndex - 1].id\r\n      : props.charactersToShow[actualIndex].id;\r\n  const nextId =\r\n    actualIndex < props.charactersToShow.length - 1\r\n      ? props.charactersToShow[actualIndex + 1].id\r\n      : props.charactersToShow[actualIndex].id;\r\n  return (\r\n    <>\r\n      <div className=\"prev-post\">\r\n        <Link\r\n          className={`link__arrow ${prevId === id ? \"disabled-link\" : \"\"}`}\r\n          to={`/character/${prevId}`}\r\n        >\r\n          <i class=\"fas fa-chevron-left\"></i>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <img src={Portal} alt=\"\" />\r\n        </Link>\r\n        <Link\r\n          className={`link__arrow ${nextId === id ? \"disabled-link\" : \"\"}`}\r\n          to={`/character/${nextId}`}\r\n        >\r\n          <i class=\"fas fa-chevron-right\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"info__character__detail\">\r\n        <div className=\"character__info\">\r\n          <div className=\"container__img__info\">\r\n            <img src={image} alt=\"character image\" />\r\n          </div>\r\n          <div className=\"container__info__info\">\r\n            <h2>Name: {name}</h2>\r\n            <p>\r\n              Status: {status}\r\n              <i\r\n                className={\r\n                  status === \"Alive\"\r\n                    ? `far fa-heart`\r\n                    : status === \"Dead\"\r\n                    ? `far fa-dizzy`\r\n                    : status === \"unknown\"\r\n                    ? `fas fa-question`\r\n                    : \"\"\r\n                }\r\n              ></i>\r\n            </p>\r\n            <p>\r\n              Specie: {species}\r\n              <i\r\n                className={\r\n                  species === \"Human\"\r\n                    ? `fas fa-user-alt`\r\n                    : `fab fa-reddit-alien`\r\n                }\r\n              ></i>\r\n            </p>\r\n            <p>Planet: {origin}</p>\r\n            <p>Chapters: {episode.length}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nCharacterInfo.propTypes = {\r\n  character: PropTypes.object,\r\n};\r\n\r\nexport default CharacterInfo;\r\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport fetchFromApi from \"../data/fetchFromApi\";\nimport InputFilter from \"./InputFilter\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterInfo from \"./CharacterInfo\";\nimport NotFound from \"../images/not-found.png\";\nimport Portal from \"../images/portal.png\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      characters: [],\n      filterCharacter: \"\",\n      specieSelected: \"all\",\n    };\n    this.filterCharacter = this.filterCharacter.bind(this);\n    this.filterSpecies = this.filterSpecies.bind(this);\n    this.renderCharacterInfo = this.renderCharacterInfo.bind(this);\n  }\n\n  componentDidMount() {\n    fetchFromApi().then((character) => {\n      const orderedObject = character.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        } else if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      });\n\n      if (character === undefined) {\n        this.setState({\n          isFetching: true,\n        });\n      } else {\n        this.setState({\n          isFetching: false,\n          characters: orderedObject,\n          characterToShow: character,\n        });\n      }\n    });\n  }\n\n  filterCharacter(character) {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        filterCharacter: character,\n      };\n    });\n  }\n\n  filterSpecies(specie) {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        specieSelected: specie,\n      };\n    });\n  }\n\n  allFilters() {\n    const characters = this.state.characters;\n    const filterCharacter = this.state.filterCharacter;\n    const specieSelected = this.state.specieSelected;\n    return characters\n      .filter(\n        (character) =>\n          character.species.toLowerCase() === specieSelected ||\n          \"all\" === specieSelected\n      )\n      .filter((character) =>\n        character.name.toLowerCase().includes(filterCharacter.toLowerCase())\n      );\n  }\n\n  renderCharacterInfo(props) {\n    const routeId = parseInt(props.match.params.id);\n    const size = this.state.characters.length;\n    const selectedCharacter = this.state.characters.find(\n      (character) => character.id === routeId\n    );\n    if (selectedCharacter === undefined) {\n      return (\n        <div className=\"go__home\">\n          <Link to=\"/\">\n            <img className=\"portal__home\" src={Portal} alt=\"\" />\n          </Link>\n          <div className=\"not__exist\">\n            <h2>The character you are looking for, doesn't exist.</h2>\n            <div className=\"not-found\">\n              <img src={NotFound} alt=\"\" />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <CharacterInfo\n          character={selectedCharacter}\n          size={size}\n          charactersToShow={this.allFilters()}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <InputFilter\n              inputValue={this.state.filterCharacter}\n              filterCharacter={this.filterCharacter}\n              specieSelected={this.state.specieSelected}\n              filterSpecies={this.filterSpecies}\n            />\n            <CharacterList\n              characters={this.allFilters()}\n              filterCharacter={this.filterCharacter}\n              specieSelected={this.state.specieSelected}\n              filterSpecies={this.filterSpecies}\n            />\n          </Route>\n          <Route\n            path=\"/character/:id\"\n            render={this.renderCharacterInfo}\n          ></Route>\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheet/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}